// Available variables which can be used inside of strings.
// ${workspaceRoot}: the root folder of the team
// ${file}: the current opened file
// ${relativeFile}: the current opened file relative to workspaceRoot
// ${fileBasename}: the current opened file's basename
// ${fileDirname}: the current opened file's dirname
// ${fileExtname}: the current opened file's extension
// ${cwd}: the current working directory of the spawned process
{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    "version": "2.0.0",

    // Start PowerShell
    "windows": {
        "command": "${env:windir}/System32/WindowsPowerShell/v1.0/powershell.exe",
        "args": [
            "-NoProfile",
            "-ExecutionPolicy",
            "Bypass"
        ]
    },
    "linux": {
        "command": "/usr/bin/powershell",
        "args": [
            "-NoProfile"
        ]
    },
    "osx": {
        "command": "/usr/local/bin/powershell",
        "args": [
            "-NoProfile"
        ]
    },

    // Associate with test task runner
    "tasks": [{
            "taskName": "Analyze",

            "suppressTaskName": true,
            "showOutput": "always",
            "args": [
                "Write-Host 'Running Analyze Task...'; & .\\build.ps1 -Task Analyze;",
                "Write-Host \"`nCompleted Analyze task in task runner.\""
            ]
        },
        {
            "taskName": "Test",
            "suppressTaskName": true,
            "isTestCommand": true,
            "showOutput": "always",
            "args": [
                "Write-Host 'Running Test Task...'; & .\\build.ps1 -Task Test;",
                "Write-Host \"`nCompleted Test task in task runner.\""
            ],
            "problemMatcher": [{
                "owner": "powershell",
                "fileLocation": ["absolute"],
                "severity": "error",
                "pattern": [{
                        "regexp": "^\\s*(\\[-\\]\\s*.*?)(\\d+)ms\\s*$",
                        "message": 1
                    },
                    {
                        "regexp": "^\\s+at\\s+[^,]+,\\s*(.*?):\\s+line\\s+(\\d+)$",
                        "file": 1,
                        "line": 2
                    }
                ]
            }]
        },
        {
            "taskName": "Build",
            "suppressTaskName": true,
            "isBuildCommand": true,
            "args": [
                "Write-Host 'Running Build Task...'; & .\\build.ps1 -Task Build;",
                "Write-Host \"`nCompleted Build task in task runner.\""
            ]
        }
    ]
}